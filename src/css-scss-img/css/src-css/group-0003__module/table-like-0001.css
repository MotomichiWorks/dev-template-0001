@charset "UTF-8";
/**
 * 各モジュール、各レイアウトで使用するbackground-imageのmixinを以下に手書きで定義
 */
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/**
 * このファイルは上記のファイルを@importする為だけのファイルなので、mixinはここには記述しません。
 * - CSSスプライトを使用しない単体のbackground-imageのmixinは「_mixin__bg-image__solo.scss」に手書きします。
 * - CSSスプライトをするbackground-imageのmixinは「_mixin__bg-image__spritesmith.scss」として自動生成されます。
 *
 * 上記の2ファイル内に定義されたmixinを各モジュール内で実行することとし、画像ファイルのパスを各モジュール内に書くことを禁止しています。
 *
 */
.table-like-0001 .table-like-0001__second-wrap {
  display: block; }
.table-like-0001 .table-like-0001__loading-icon-wrap {
  position: relative;
  height: 100px; }
.table-like-0001 .table-like-0001__table {
  display: table;
  width: 100%; }
.table-like-0001 .table-like-0001__tr {
  display: table-row;
  position: relative; }
  .table-like-0001 .table-like-0001__tr:nth-child(2n+1) {
    background: #f3f3f3; }
.table-like-0001 .table-like-0001__td-0002,
.table-like-0001 .table-like-0001__th-0002,
.table-like-0001 .table-like-0001__td-0001,
.table-like-0001 .table-like-0001__th-0001 {
  position: relative;
  display: table-cell;
  border-bottom: 1px solid #bdbdbd;
  border-left: 1px solid #bdbdbd;
  vertical-align: top; }
.table-like-0001 [class*="table-like-0001__th"] {
  background: #c9c9c9; }
.table-like-0001 .table-like-0001__td-0001,
.table-like-0001 .table-like-0001__th-0001 {
  width: 20%;
  white-space: nowrap; }
.table-like-0001 .table-like-0001__td-0002,
.table-like-0001 .table-like-0001__th-0002 {
  width: 40%;
  border-right: 1px solid #bdbdbd; }
.table-like-0001 .table-like-0001__th-inner,
.table-like-0001 .table-like-0001__td-inner {
  display: block;
  padding: 12px 0 12px 12px;
  zoom: 1; }
  .table-like-0001 .table-like-0001__th-inner:after,
  .table-like-0001 .table-like-0001__td-inner:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
    overflow: hidden;
    font-size: 0.1em;
    line-height: 0; }
.table-like-0001 .table-like-0001__translucent-layer {
  background: #000000;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.1;
  position: absolute; }
.table-like-0001 .table-like-0001__td-inner__box-100-p,
.table-like-0001 .table-like-0001__td-inner__box-75-p,
.table-like-0001 .table-like-0001__td-inner__box-50-p,
.table-like-0001 .table-like-0001__td-inner__box-25-p {
  padding-right: 12px;
  float: left;
  box-sizing: border-box; }
.table-like-0001 .table-like-0001__td-inner__box-100-p {
  width: 100%; }
.table-like-0001 .table-like-0001__td-inner__box-75-p {
  width: 75%; }
.table-like-0001 .table-like-0001__td-inner__box-50-p {
  width: 50%; }
.table-like-0001 .table-like-0001__td-inner__box-25-p {
  width: 25%; }
.table-like-0001 .table-like-0001__text-wrap {
  padding-top: 4px; }
.table-like-0001 .table-like-0001__notes-text {
  font-size: 12px;
  color: #777777;
  padding-top: 4px; }
.table-like-0001 .table-like-0001__warning-text {
  font-size: 12px;
  color: #ff3333;
  padding-top: 4px; }
